# .env.example - Environment Variables Template for ICI Chat
# Copy this file to .env and fill in your actual values
# This file is safe to commit - it shows structure, not actual secrets

# =============================================================================
# üîß DEVELOPMENT CONFIGURATION
# =============================================================================

# Environment Configuration
ENVIRONMENT=development
GOOGLE_CLOUD_PROJECT=your-project-id-here
PORT=8080
DEBUG_MODE=true

# =============================================================================
# üìß EMAIL CONFIGURATION (Choose one provider)
# =============================================================================

# Option 1: SendGrid (Recommended for production)
# Get your API key from: https://app.sendgrid.com/settings/api_keys
# Free tier: 100 emails/day
SENDGRID_API_KEY=SG.your_sendgrid_api_key_here

# Option 2: Mailgun (Good for developers)  
# Get your API key from: https://app.mailgun.com/mg/dashboard
# Free tier: 5,000 emails/month (3 months)
MAILGUN_API_KEY=key-your_mailgun_api_key_here
MAILGUN_DOMAIN=your-mailgun-domain.com

# Option 3: Tutanota (Privacy-focused)
# Use your Tutanota business account credentials
TUTANOTA_USERNAME=your-email@tutanota.com
TUTANOTA_PASSWORD=your_secure_password

# =============================================================================
# üë§ ADMIN CONFIGURATION  
# =============================================================================

# Admin email for notifications and alerts
ADMIN_EMAIL=admin@your-domain.com

# Admin password for dashboard access (optional)
ADMIN_PASSWORD=your_secure_admin_password

# =============================================================================
# üîê SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key for authentication tokens
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your_random_jwt_secret_key_here

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION (Optional)
# =============================================================================

# Database connection URL (if using external database)
# Examples:
# PostgreSQL: postgresql://user:pass@localhost/dbname
# MySQL: mysql://user:pass@localhost/dbname
# SQLite: sqlite:///path/to/database.db
DATABASE_URL=sqlite:///data/ici_chat.db

# =============================================================================
# ‚öôÔ∏è FEATURE FLAGS
# =============================================================================

# Enable/disable email functionality
EMAIL_ENABLED=true

# Enable debug logging
LOG_LEVEL=INFO

# Maximum memory size for conversations
MAX_MEMORY_SIZE=1000

# Request timeout in seconds
DEFAULT_TIMEOUT=30

# =============================================================================
# üìù SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file:
#    Copy-Item .env.example .env

# 2. Choose an email provider and get credentials:
#    - SendGrid: https://app.sendgrid.com/settings/api_keys
#    - Mailgun: https://app.mailgun.com/mg/dashboard  
#    - Tutanota: Use your business account credentials

# 3. Generate JWT secret:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"

# 4. Fill in your values in the .env file

# 5. Test configuration:
#    python validate.py --check-secrets

# 6. Run health check:
#    .\daily_health_check.ps1

# =============================================================================
# üîí SECURITY NOTES
# =============================================================================

# - NEVER commit the .env file to version control
# - Use different secrets for development and production
# - Rotate secrets regularly (monthly recommended)
# - Use Google Secret Manager for production deployments
# - Monitor secret access in audit logs

# =============================================================================
# üÜò TROUBLESHOOTING
# =============================================================================

# If emails aren't working:
# 1. Check EMAIL_ENABLED=true
# 2. Verify API key is correct
# 3. Check provider account status
# 4. Review logs for error messages
# 5. Test with: python -c "from backend.utils.config import config; print(config.get_configuration_report())"

# If secrets aren't loading:
# 1. Verify .env file exists in project root
# 2. Check environment variable names match exactly
# 3. Restart the application after changes
# 4. Check logs for secret access attempts
